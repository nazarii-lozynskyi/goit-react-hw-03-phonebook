{"version":3,"sources":["components/phoneBook/contacts/Contacts.module.css","components/phoneBook/form/Form.module.css","components/phoneBook/searchForContacts/SearchForContacts.module.css","components/container/Container.module.css","components/phoneBook/section/Section.module.css","components/container/Container.jsx","components/phoneBook/section/Section.jsx","components/phoneBook/form/Form.jsx","components/phoneBook/contacts/Contacts.jsx","components/phoneBook/searchForContacts/SearchForContacts.jsx","components/phoneBook/PhoneBook.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","console","log","props","onSubmit","reset","this","form","inputContainer","htmlFor","label","type","pattern","required","onChange","id","input","btn","Component","Contacts","contacts","onDeleteContact","list","map","item","marker","btnRemove","onClick","SearchForContacts","filterId","PhoneBook","filter","addContacts","data","checkForDuplicationOfContacts","find","contact","alert","prevState","deleteContact","contactId","changeFilter","getVisibleContacts","normalizeFilter","toLowerCase","includes","visibleContacts","on","React","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94b7e91a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__2sO1h\",\"list\":\"Contacts_list__3UEpz\",\"item\":\"Contacts_item__2VLQG\",\"number\":\"Contacts_number__1m17c\",\"btnRemove\":\"Contacts_btnRemove__2-whw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1P8KU\",\"inputContainer\":\"Form_inputContainer__1vAvt\",\"label\":\"Form_label__1wOd4\",\"btn\":\"Form_btn__WqJD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchForContacts_container__3VsT-\",\"input\":\"SearchForContacts_input__1sZVW\",\"label\":\"SearchForContacts_label__hkUL4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__303Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2IICk\"};","import styles from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import styles from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    console.log(this.state);\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <div className={styles.inputContainer}>\r\n          <label htmlFor={this.nameInputId} className={styles.label}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n              className={styles.input}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={this.numberInputId} className={styles.label}>\r\n            Phone\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n              className={styles.input}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport styles from './Contacts.module.css';\r\n\r\nconst Contacts = ({ contacts, title, onDeleteContact, children }) => (\r\n  <>\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{title} </h2>\r\n\r\n      {children}\r\n\r\n      <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.item}>\r\n            <span className={styles.marker}></span>\r\n            <p className={styles.name}>{name}:</p>\r\n            <p className={styles.number}>{number}</p>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className={styles.btnRemove}\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './SearchForContacts.module.css';\r\n\r\nconst SearchForContacts = ({ onChange, value, filterId = uuidv4() }) => (\r\n  <div className={styles.container}>\r\n    <label htmlFor={filterId} className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={value}\r\n        onChange={onChange}\r\n        id={filterId}\r\n        className={styles.input}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nSearchForContacts.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchForContacts;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Section from './section';\r\nimport Form from './form';\r\nimport Contacts from './contacts';\r\nimport SearchForContacts from './searchForContacts';\r\n\r\nimport styles from './PhoneBook.module.css';\r\n\r\nclass PhoneBook extends React.Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContacts = data => {\r\n    //console.log(data);\r\n\r\n    const checkForDuplicationOfContacts = this.state.contacts.find(\r\n      contact => contact.name === data.name\r\n    );\r\n\r\n    if (checkForDuplicationOfContacts) {\r\n      alert(`${data.name} is already in contacts`);\r\n    } else {\r\n      const contact = {\r\n        id: uuidv4(),\r\n        name: data.name,\r\n        number: data.number,\r\n      };\r\n\r\n      this.setState(prevState => ({\r\n        contacts: [contact, ...prevState.contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Section className={styles.container} title=\"Phonebook\">\r\n        <Form onSubmit={this.addContacts} />\r\n\r\n        <Contacts\r\n          contacts={visibleContacts}\r\n          title=\"Contacts\"\r\n          on\r\n          onDeleteContact={this.deleteContact}\r\n        >\r\n          <SearchForContacts onChange={this.changeFilter} value={filter} />\r\n        </Contacts>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhoneBook;\r\n","import Container from './components/container';\nimport PhoneBook from './components/phoneBook';\n\nfunction App() {\n  return (\n    <Container>\n      <PhoneBook />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}